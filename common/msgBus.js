class msgBus {
    /*
    Има 2 основни транспорт-а. локален и разпределен. 
    При локален изпратените съобщения не се рутират извън процеса. 
    При разпределен ще се използва Redis Pub/Sub(ще обясня допълнително). 

    Трябва да има два основни топика - system и service.
    */

    //Връща комуникатор с помощта, на който услугата може да изпраща различен тип съобщения.
    init() {
        //TODO
    }

    //Приема метод който се извиква при получаване на broadcast, не връща резултат.
    subscribeBroadcast(action) {
        //TOTO
    }

    //Приема метод който се извиква след получаване на query, не връща резултат.
    subscribeQuery(action) {
        //TODO
    }

    //Параметри: payload - метод който изпраща съобщения и не чака отговор
    broadcast(payload) {
        //TODO
    }

    //Параметри: subject - получател, payload - връща Promise, който resolve-a  с отговора или reject-ва с грешка.
    query(subject, payload) {
        //TODO
    }
}